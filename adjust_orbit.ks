RUNONCEPATH("0:/AutoKSP/lib_orbit.ks").

parameter PERI.
parameter APO.

print "Adjust orbit.".
local ORB is CREATEORBIT(SHIP:ORBIT:INCLINATION, PERI_APO_TO_ECCENTRICITY(PERI,APO), (PERI+APO)/2, SHIP:ORBIT:LAN, SHIP:ORBIT:ARGUMENTOFPERIAPSIS, 0, 0, SHIP:ORBIT:BODY).
local PERI_SPEED is R_TO_ORBITAL_SPEED(PERI, SHIP:ORBIT:BODY, ORB).
local APO_SPEED is R_TO_ORBITAL_SPEED(APO, SHIP:ORBIT:BODY, ORB).
unlock STEERING.
SAS on.
set SASMODE to "prograde".
print SHIP:ORBIT:PERIAPSIS.
print SHIP:ORBIT:APOAPSIS.
print MARGIN.
until ABS(SHIP:ORBIT:PERIAPSIS-PERI)<MARGIN and ABS(SHIP:ORBIT:APOAPSIS-APO)<MARGIN {
	// If periapsis is sooner, match periapsis speed. Else, match apoapsis speed.
	if ETA:PERIAPSIS < ETA:APOAPSIS {
		local EST_BURN_TIME is (PERI_SPEED-SHIP:VELOCITY:ORBIT:MAG)/AVAILABLE_ACCEL().
		KUNIVERSE:TIMEWARP:WARPTO(TIME:SECONDS+ETA:APOAPSIS -EST_BURN_TIME).
		wait until KUNIVERSE:TIMEWARP = 0.
		lock THROTTLE to choose 0 if AVAILABLE_ACCEL()=0 else (choose 1 if ETA:PERIAPSIS*1.5 < EST_BURN_TIME else 0).
	} else {
		local EST_BURN_TIME is (APO_SPEED-SHIP:VELOCITY:ORBIT:MAG)/AVAILABLE_ACCEL().
		KUNIVERSE:TIMEWARP:WARPTO(TIME:SECONDS+ETA:PERIAPSIS -EST_BURN_TIME).
		wait until KUNIVERSE:TIMEWARP = 0.
		lock THROTTLE to choose 0 if AVAILABLE_ACCEL()=0 else (choose 1 if ETA:APOAPSIS*1.5 < EST_BURN_TIME else 0).
	}
}
lock THROTTLE to 0.
unlock THROTTLE.
print "Done adjusting orbit.".